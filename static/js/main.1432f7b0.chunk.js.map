{"version":3,"sources":["Global/dataGlobal.js","Controllers/PanelController.js","Controllers/TaskController.js","Components/taskComponent.js","Components/panelComponent.js","Components/managerTaskComponent.js","App.js","index.js"],"names":["datos","PanelController","panelContent","this","dataPanel","panel","push","savePanels","localStorage","setItem","local","getItem","length","TaskController","taskContent","localTasks","state","filter","e","id","element","find","index","indexOf","splice","saveTasks","max","forEach","task","reactLocalStorage","setObject","getObject","Object","values","dataTask","Task","props","tarea","data","tid","className","onDragStart","event","dataTransfer","setData","target","draggable","class","type","onClick","console","log","delById","window","location","reload","aria-hidden","Panel","useState","get","map","item","itemTask","getByState","key","style","color","textAlign","backgroundColor","onDragOver","preventDefault","onDrop","taskDrag","getData","myTask","getById","substring","JSON","stringify","parseInt","add","appendChild","document","getElementById","undefined","t","ManagerTask","text","setText","onSubmit","lastId","newTask","for","onChange","value","App","viewTask","setViewTask","clear","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1432f7b0.chunk.js","sourcesContent":["const datos = {\r\n    \"dataPanel\" : [\r\n        {\"id\":0, \"panel\": \"ToDO\", \"color\": \"gray\"},\r\n        {\"id\":1, \"panel\": \"Developing\", \"color\": \"blue\"},\r\n        {\"id\":2, \"panel\": \"Testing\", \"color\": \"orange\"},\r\n        {\"id\":3, \"panel\": \"Done\", \"color\": \"green\"}\r\n    ],\r\n    \"dataTask\" : [\r\n        {\"id\": 0, \"task\": \"Hacer el RETO 1\", \"state\": 0},\r\n        {\"id\": 1, \"task\": \"Hacer el RETO 2\", \"state\": 0},\r\n        {\"id\": 2, \"task\": \"Hacer el RETO 3\", \"state\": 0}\r\n    ]\r\n};\r\nexport default  datos;\r\n","import datos from '../Global/dataGlobal';\r\nexport default class PanelController \r\n{\r\n    panelContent = [];\r\n    //Constructor, llama al método de carga de paneles\r\n    constructor(){\r\n            this.panelContent = datos.dataPanel;\r\n    }\r\n\r\n    //Método get que devuelve los paneles\r\n    get(){\r\n        return this.panelContent;\r\n    }\r\n\r\n    //Método para añadir un panel nuevo\r\n    add(panel){\r\n        this.panelContent.push(panel);\r\n        this.savePanels();\r\n    }\r\n\r\n    savePanels(){\r\n        localStorage.setItem(\"panels\", this.panelContent);\r\n    }\r\n\r\n    localPanels(){\r\n        let local = localStorage.getItem(\"panels\");\r\n\r\n        if (local.length > 0) {\r\n            this.panelContent = local;\r\n        }\r\n        else{\r\n            this.panelContent = datos.dataPanel;\r\n        }\r\n    }\r\n}","import datos from '../Global/dataGlobal';\r\nimport {reactLocalStorage} from 'reactjs-localstorage';\r\n\r\nexport default class TaskController \r\n{\r\n    taskContent = [];\r\n\r\n    constructor(){\r\n            this.localTasks();\r\n    }\r\n\r\n    get(){\r\n        return this.taskContent;\r\n    }\r\n\r\n    getByState(state){\r\n        let element = this.taskContent.filter(e => e.state === state);\r\n        return element;\r\n    }\r\n\r\n    getById(id){\r\n        let element = this.taskContent.filter(e => e.id === id);\r\n        return element[0];\r\n    }\r\n\r\n    delById(id){\r\n\r\n        let element = this.taskContent.find(e => e.id === id);\r\n        let index = this.taskContent.indexOf(element);\r\n\r\n        if (index > -1)\r\n        {\r\n            this.taskContent.splice(index,1);\r\n            this.saveTasks();\r\n        }\r\n\r\n    }\r\n\r\n    lastId(){\r\n        var max = -1;\r\n\r\n        this.taskContent.forEach(element => {\r\n            if (element.id > max){\r\n                max = element.id;\r\n            }\r\n        });\r\n\r\n        return max;\r\n    }\r\n\r\n    //Método para añadir un panel nuevo\r\n    add(task){\r\n        let element = this.taskContent.find(e => e.id === task.id);\r\n        let index = this.taskContent.indexOf(element)\r\n        if (index === -1)\r\n        {\r\n            this.taskContent.push(task);\r\n            this.saveTasks();\r\n        }\r\n\r\n    }\r\n\r\n    saveTasks(){\r\n        reactLocalStorage.setObject('task', this.taskContent);\r\n    }\r\n\r\n    localTasks(){\r\n        let local = reactLocalStorage.getObject('task');\r\n        if (local !== null && local.length > 0) {\r\n            this.taskContent = Object.values(local);\r\n        }\r\n        else{\r\n            this.taskContent = datos.dataTask;\r\n            this.saveTasks();\r\n        }\r\n    }\r\n}","import React  from 'react';\r\nimport TaskController from '../Controllers/TaskController';\r\nimport './task.css';\r\n\r\nfunction Task(props) {\r\n    var tarea = props.data;\r\n    var tid = \"T\"+tarea.id; \r\n\r\n    const onDragStart = (event) => {\r\n    \tevent.dataTransfer.setData(\"task\", event.target.id);\r\n\t  }\r\n\r\n    const deleteTask = (e) =>{\r\n      console.log(\"DELETE TASK \" + tarea.id);\r\n      let tc = new TaskController();\r\n      tc.delById(tarea.id);\r\n      window.location.reload();\r\n    }\r\n  \r\n\r\n    return (\r\n      <div  id={tid} className=\"card\"\r\n      \t\tonDragStart = {(event) => onDragStart(event)}\r\n\t\t    draggable\r\n      >   \r\n        <div class=\"d-flex w-100\">      \r\n          <p className=\"pl-2\">{tarea.task}</p>\r\n          <button type=\"button\" \r\n             onClick={deleteTask}\r\n            className=\"close align-self-baseline ml-auto\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n  \r\n  export default Task;","import React, { useState } from 'react';\r\nimport  PanelController from '../Controllers/PanelController';\r\nimport  TaskController from '../Controllers/TaskController';\r\nimport Task from './taskComponent';\r\nimport './panel.css';\r\n\r\nfunction Panel() {\r\n\r\n    const [panel] = useState(new PanelController().get());\r\n    const [task] = useState(new TaskController());\r\n\r\n\tconst onDragOver = (event) => {\r\n\t    event.preventDefault();\r\n\t}\r\n\r\n\tconst onDrop = (event) => {\r\n        if (event.target.id.indexOf(\"T\") === -1 && event.target.id !== ''){\r\n            let taskDrag = event.dataTransfer.getData(\"task\");\r\n\r\n            let myTask = task.getById(taskDrag.substring(1));\r\n            console.log(\"MYTASK \" + JSON.stringify(myTask));\r\n\r\n            myTask.state = parseInt(event.target.id);\r\n\r\n            task.delById(myTask.id);\r\n            \r\n            task.add(myTask);\r\n            \r\n            event.target.appendChild(document.getElementById(taskDrag));\r\n        }\r\n\r\n\r\n\t}\r\n\r\n     return (\r\n      <div className=\"row\">\r\n            {\r\n                panel.map(item => {\r\n                    let itemTask = task.getByState(item.id);\r\n                    let key = \"P\"+item.id;\r\n                    return(\r\n                        <div key={key} className=\"col-lg-3 col-md-6 col-12\">\r\n                            <h3 style={{color: item.color, textAlign: 'center'}}>{item.panel}</h3>\r\n                            <div id={item.id}\r\n                                className=\"container-drop\"\r\n                                style={{backgroundColor: item.color}}\r\n\t    \t\t                onDragOver={(event)=>onDragOver(event)}\r\n      \t\t\t                onDrop={(event)=>{onDrop(event)}}>\r\n                                {\r\n                                  itemTask!==undefined&&itemTask.map((t)=> {\r\n                                        var key = t.state+\"T\"+t.id; \r\n                                        return <Task key={key} data={t}/>\r\n                                    })\r\n                                   \r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  \r\n  export default Panel;","import React, { useState } from 'react';\r\nimport  TaskController from '../Controllers/TaskController';\r\n\r\n    function ManagerTask() {\r\n    const [task] = useState(new TaskController());\r\n    const [text, setText] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        console.log(\"SUBMIT\");\r\n        let id = task.lastId();\r\n\r\n        let newTask =  {\"id\": parseInt(id)+1, \"task\": text, \"state\": 0};\r\n\r\n        task.add(newTask);\r\n        //window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div class=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\">Task description</label>\r\n                    <input type=\"text\"  onChange={handleChange} class=\"form-control\" id=\"task\" />\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-info\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n  \r\nexport default ManagerTask;","import './App.css';\nimport Panel from './Components/panelComponent';\nimport ManagerTask from './Components/managerTaskComponent';\nimport React, { useState } from 'react';\n\nfunction App() {\n\n  const [viewTask, setViewTask] = useState(true);\n\n\n  const clearLocalTask = (e) =>{\n    window.localStorage.clear();\n    window.location.reload();\n  }\n\n  const taskManager = (e) =>{\n    setViewTask(!viewTask);\n  }\n\n  return (\n    <div className=\"container\">\n      <h2 className=\"display-5\">Tre.io Clone!</h2>\n        {\n          !viewTask &&<ManagerTask/>\n        }\n\n        <Panel/>\n    \n        \n\n\n        <div className=\"mt-5 \">\n          <button type=\"button\" className=\"btn btn-primary ml-2\"\n          onClick={taskManager}>{viewTask?\"Add\":\"View\"} Tasks</button>\n          <button type=\"button\" className=\"btn btn-warning ml-2\" \n            onClick={clearLocalTask}>RESET APP</button>\n        </div>\n        \n        \n    </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}